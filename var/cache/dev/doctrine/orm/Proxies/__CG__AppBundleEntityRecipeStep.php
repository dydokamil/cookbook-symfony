<?php

namespace Proxies\__CG__\AppBundle\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class RecipeStep extends \AppBundle\Entity\RecipeStep implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = [];



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return ['__isInitialized__', '' . "\0" . 'AppBundle\\Entity\\RecipeStep' . "\0" . 'id', '' . "\0" . 'AppBundle\\Entity\\RecipeStep' . "\0" . 'prepTime', '' . "\0" . 'AppBundle\\Entity\\RecipeStep' . "\0" . 'number', '' . "\0" . 'AppBundle\\Entity\\RecipeStep' . "\0" . 'instructions', '' . "\0" . 'AppBundle\\Entity\\RecipeStep' . "\0" . 'cookTime', '' . "\0" . 'AppBundle\\Entity\\RecipeStep' . "\0" . 'recipe', '' . "\0" . 'AppBundle\\Entity\\RecipeStep' . "\0" . 'ingredient_step_joins'];
        }

        return ['__isInitialized__', '' . "\0" . 'AppBundle\\Entity\\RecipeStep' . "\0" . 'id', '' . "\0" . 'AppBundle\\Entity\\RecipeStep' . "\0" . 'prepTime', '' . "\0" . 'AppBundle\\Entity\\RecipeStep' . "\0" . 'number', '' . "\0" . 'AppBundle\\Entity\\RecipeStep' . "\0" . 'instructions', '' . "\0" . 'AppBundle\\Entity\\RecipeStep' . "\0" . 'cookTime', '' . "\0" . 'AppBundle\\Entity\\RecipeStep' . "\0" . 'recipe', '' . "\0" . 'AppBundle\\Entity\\RecipeStep' . "\0" . 'ingredient_step_joins'];
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (RecipeStep $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', []);
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', []);
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function __toString()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, '__toString', []);

        return parent::__toString();
    }

    /**
     * {@inheritDoc}
     */
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', []);

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function setPrepTime($prepTime)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPrepTime', [$prepTime]);

        return parent::setPrepTime($prepTime);
    }

    /**
     * {@inheritDoc}
     */
    public function getPrepTime()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPrepTime', []);

        return parent::getPrepTime();
    }

    /**
     * {@inheritDoc}
     */
    public function setNumber($number)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setNumber', [$number]);

        return parent::setNumber($number);
    }

    /**
     * {@inheritDoc}
     */
    public function getNumber()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getNumber', []);

        return parent::getNumber();
    }

    /**
     * {@inheritDoc}
     */
    public function setInstructions($instructions)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setInstructions', [$instructions]);

        return parent::setInstructions($instructions);
    }

    /**
     * {@inheritDoc}
     */
    public function getInstructions()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getInstructions', []);

        return parent::getInstructions();
    }

    /**
     * {@inheritDoc}
     */
    public function setCookTime($cookTime)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCookTime', [$cookTime]);

        return parent::setCookTime($cookTime);
    }

    /**
     * {@inheritDoc}
     */
    public function getCookTime()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCookTime', []);

        return parent::getCookTime();
    }

    /**
     * {@inheritDoc}
     */
    public function setRecipe(\AppBundle\Entity\Recipe $recipe = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setRecipe', [$recipe]);

        return parent::setRecipe($recipe);
    }

    /**
     * {@inheritDoc}
     */
    public function getRecipe()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getRecipe', []);

        return parent::getRecipe();
    }

    /**
     * {@inheritDoc}
     */
    public function addIngredient(\AppBundle\Entity\Ingredient $ingredient)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addIngredient', [$ingredient]);

        return parent::addIngredient($ingredient);
    }

    /**
     * {@inheritDoc}
     */
    public function removeIngredient(\AppBundle\Entity\Ingredient $ingredient)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeIngredient', [$ingredient]);

        return parent::removeIngredient($ingredient);
    }

    /**
     * {@inheritDoc}
     */
    public function getIngredients()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getIngredients', []);

        return parent::getIngredients();
    }

    /**
     * {@inheritDoc}
     */
    public function addIngredientStepJoin(\AppBundle\Entity\IngredientStepJoin $ingredientStepJoin)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addIngredientStepJoin', [$ingredientStepJoin]);

        return parent::addIngredientStepJoin($ingredientStepJoin);
    }

    /**
     * {@inheritDoc}
     */
    public function removeIngredientStepJoin(\AppBundle\Entity\IngredientStepJoin $ingredientStepJoin)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeIngredientStepJoin', [$ingredientStepJoin]);

        return parent::removeIngredientStepJoin($ingredientStepJoin);
    }

    /**
     * {@inheritDoc}
     */
    public function getIngredientStepJoins()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getIngredientStepJoins', []);

        return parent::getIngredientStepJoins();
    }

}
